---
- name: Realizacion del reto1
  #hosts: all
  hosts: student2-win1
  become: true
  gather_facts: false
  
  tasks:
    - name: Obtener el hostname
      win_shell: hostname
      register: hostname_output

    - name: Imprimir el resultado
      debug:
        msg: "El hostname es {{ hostname_output.stdout }}"
    
    
    - name: Obtener informaci칩n del sistema operativo
      win_shell: 
        $osInfo = Get-WmiObject -Class Win32_OperatingSystem
        $osVersion = $osInfo.Version
        $osCaption = $osInfo.Caption
        Write-Host "La versi칩n de Windows es $osCaption ($osVersion)"
      register: os_info_output
      changed_when: false

    - name: Imprimir el resultado
      debug:
        msg: "{{ os_info_output.stdout }}"
    
    
     
    - name: Gather facts from Chocolatey
      chocolatey.chocolatey.win_chocolatey_facts:

    - name: Displays the gathered facts
      ansible.builtin.debug:
        var: ansible_chocolatey
        
    - name: Displays the gathered facts
      ansible.builtin.debug:
        var: windows_version.stdout_line
     
     
    - name: Check windows version
      ansible.windows.win_command: windows --version
      register: version
      
    - ansible.builtin.debug:
        msg:  Version is {{ version.stdout_lines[0] }} 
  
  
    - name: install iis
      win_feature:
        name: Web-Server
        state: present
    - name: start iis service
      win_service:
        name: W3Svc
        state: started
  
  #  - name: Enable firewall
  #    community.windows.win_firewall:
  #    state: enabled
  
    - name: Create a directory 
      win_file:
       path: /tmp/reto1
       state: directory
       
    - name: Create a file 
      win_file:
        path: /tmp/reto1/reto1_content
        state: touch
        content: "{{ os_info_output.stdout }}"
       
    - name: archivo reto1_content la versi칩n de windows del servido 
      win_copy:
        content: "{{ os_info_output.stdout }}" 
        dest:  /tmp/reto1/reto1_content
        
    -  name: Install all updates
       ansible.windows.win_updates:
         category_names: '*'
         
    - name: Actualizar paquetes con Chocolatey
      win_chocolatey:
        name: all
        state: latest
         
         
    - name: Install Windows Updates
      win_updates:
        category_names: "{{ categories | default(omit) }}"
        reboot: '{{ reboot_server | default(true) }}'
        
    - name: Reboot
      ansible.windows.win_reboot:
      
    - name: Change the hostname
      ansible.windows.win_hostname:
        name: taty
        register: cambio
        
    -  name: backup 
       win_copy:
        src:  /tmp/reto1/reto1_content
        dest:  /tmp/reto1/reto1_content_1
        
    - name: Insert linea
      community.windows.win_lineinfile:
        path: /tmp/reto1/reto1_content
        line: "ESTA ES UNA PRUEBA"
          
   # - name:  cambiar linea
      community.windows.win_lineinfile:
        path:  /tmp/reto1/reto1_content
        regex: '^Version is {{ version.stdout_lines[0] }} '
        line: "ANSIBLE CON WINDOWS"
        
  #  - name:  cambiar linea
  #    win_replace:
  #      path:  /tmp/reto1/reto1_content
  #      regexp:  '^ "{{ os_info_output.stdout }}"'
  #      replace: "ANSIBLE CON WINDOWS"
       
  
  
  
  
  
  

   # - name: Obtener el hostname de la m치quina e imprimir 
   #   ansible.builtin.setup:
   #     filter:
   #     - 'ansible_hostname'
   #   register: setup

   # - debug:
   #     var: setup
  
  
  
 
   
   
   
  
  
